REPO_ROOT=$(shell git rev-parse --show-toplevel)
TOOLS_MAKE_DIR=$(REPO_ROOT)/tools/make
PROBLEMS=$(shell find -L . -mindepth 1 -maxdepth 1 -type d | sort)

.PHONY: notes
notes: $(foreach p,$(PROBLEMS),$(p)/notes.pdf)
	pdfjam --landscape -q -o notes.pdf $(foreach p,$(PROBLEMS),'$(p)/notes.pdf')

%/notes.pdf: %
	printf "Building notes for Problem $< with "
	if [ -f "$</Makefile" ];\
	then echo "make" && $(MAKE) -C "$<" notes && ln -sf build/notes.pdf "$</notes.pdf";\
	else echo "bt" && bt solutions --problem "$<" && pdfjam --landscape -q -o "$</notes.pdf" "$</solution.en.pdf";\
	fi

.PHONY: clean
clean:
	rm -f notes.pdf contest.pdf

.PHONY: check-notes
check-notes:
	$(foreach p,$(PROBLEMS),'$(MAKE)' -C '$(p)' check-notes;)

.PHONY: contest-pdf
contest-pdf:
	'$(TOOLS_MAKE_DIR)/build-contest-pdf.sh' contest.pdf $(PROBLEMS)

.PHONY: upload
upload:
	$(foreach p,$(PROBLEMS),cd -L $(p) && '$(MAKE)' pack && cd ..;)
	'$(TOOLS_MAKE_DIR)/upload.py' -c

ifndef VERBOSE
.SILENT:
endif
